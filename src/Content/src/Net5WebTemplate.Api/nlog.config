<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-net5webtemplate.txt">

  <!-- NLog Variables -->
  <variable name="logName" value="net5webtemplate" />
  <variable name="logDir" value=".\logs\${logName}" />
  <variable name="projectName" value="Net5WebTemplate" />


  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- This log captures all log envents from both IIS ans application processes.
         a stricter retention policy is used as not to fill up storage space. -->
    <!-- write logs to file  -->
    <target xsi:type="File" name="allfile"
            fileName="${logDir}\${logName}-${shortdate}.log"
            archiveEvery="Day"
            archiveNumbering="Rolling"
            maxArchiveFiles="5"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- Exception Error log -->
    <target name="errorLog" xsi:type="File"
            fileName="${logDir}\${logName}-error-${shortdate}.log"
            archiveFileName="${logDir}\archives\${logName}-error.log.{#}"
            archiveEvery="Day"
            archiveNumbering="Rolling"
            maxArchiveFiles="10"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!-- Informantion Log -->
    <target name="infoLog" xsi:type="File"
            fileName="${logDir}\${logName}-info-${shortdate}.log"
            archiveFileName="${logDir}\archives\${logName}-info.log{#}"
            archiveEvery="Day"
            archiveNumbering="Rolling"
            maxArchiveFiles="10"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target  name="lifetimeConsole" 
             xsi:type="Console" 
             layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!-- Capture only Net5WebTemplate.* class Info level logging -->
    <logger name="Net5WebTemplate.*" level="Info" writeTo="infoLog" />

    <!-- Capture only Net5WebTemplate.* class Error level logging -->
    <logger name="Net5WebTemplate.*" minlevel="Error" writeTo="errorLog" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

    <!-- All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <!-- Skip non-critical Microsoft logs and so log only logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />
  </rules>
</nlog>